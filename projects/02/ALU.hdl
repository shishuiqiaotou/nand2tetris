// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU.hdl
/**
 * ALU (Arithmetic Logic Unit):
 * Computes out = one of the following functions:
 *                0, 1, -1,
 *                x, y, !x, !y, -x, -y,
 *                x + 1, y + 1, x - 1, y - 1,
 *                x + y, x - y, y - x,
 *                x & y, x | y
 * on the 16-bit inputs x, y,
 * according to the input bits zx, nx, zy, ny, f, no.
 * In addition, computes the output bits:
 * zr = (out == 0, 1, 0)
 * ng = (out < 0,  1, 0)
 */
// Implementation: Manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) sets x = 0        // 16-bit constant
// if (nx == 1) sets x = !x       // bitwise not
// if (zy == 1) sets y = 0        // 16-bit constant
// if (ny == 1) sets y = !y       // bitwise not
// if (f == 1)  sets out = x + y  // integer 2's complement addition
// if (f == 0)  sets out = x & y  // bitwise and
// if (no == 1) sets out = !out   // bitwise not
CHIP ALU {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute (out = x + y) or (out = x & y)?
        no; // negate the out output?
    OUT 
        out[16], // 16-bit output
        zr,      // (out == 0, 1, 0)
        ng;      // (out < 0,  1, 0)

    PARTS:
    // Implementation of zx and zy
    Mux16(a=x,b=false,sel=zx,out=outx1);
    Mux16(a=y,b=false,sel=zy,out=outy1);

    // Implementation of nx and ny
    Not16(in=outx1,out=outx2);
    Mux16(a=outx1,b=outx2,sel=nx,out=outx3);
    Not16(in=outy1,out=outy2);
    Mux16(a=outy1,b=outy2,sel=ny,out=outy3);

    // Implementation of f
    And16(a=outx3,b=outy3,out=temp1);
    Add16(a=outx3,b=outy3,out=temp2);
    Mux16(a=temp1,b=temp2,sel=f,out=out1);

    // Implementation of no
    Not16(in=out1,out=out2);
    Mux16(a=out1,b=out2,sel=no,out=out3);

    // Implementation of zr and ng 
    Or16Way(in=out3,out=out4);
    Not(in=out4,out=zr);
    And16(a=true,b=out3,out[15]=ng,out[0..14]=drop);

    // Implementation of output
    Or16(a=out3,b=false,out=out);
}
